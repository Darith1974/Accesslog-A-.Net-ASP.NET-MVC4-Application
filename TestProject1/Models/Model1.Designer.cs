//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("EmployeeModel", "FK_Employee_CompanyPosition", "CompanyPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TestProject1.Models.CompanyPosition), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TestProject1.Models.Employee), true)]
[assembly: EdmRelationshipAttribute("EmployeeModel", "FK_Log_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TestProject1.Models.Employee), "Log", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TestProject1.Models.Log), true)]

#endregion

namespace TestProject1.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EmployeeDatabase : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new EmployeeDatabase object using the connection string found in the 'EmployeeDatabase' section of the application configuration file.
        /// </summary>
        public EmployeeDatabase() : base("name=EmployeeDatabase", "EmployeeDatabase")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EmployeeDatabase object.
        /// </summary>
        public EmployeeDatabase(string connectionString) : base(connectionString, "EmployeeDatabase")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EmployeeDatabase object.
        /// </summary>
        public EmployeeDatabase(EntityConnection connection) : base(connection, "EmployeeDatabase")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyPosition> CompanyPositions
        {
            get
            {
                if ((_CompanyPositions == null))
                {
                    _CompanyPositions = base.CreateObjectSet<CompanyPosition>("CompanyPositions");
                }
                return _CompanyPositions;
            }
        }
        private ObjectSet<CompanyPosition> _CompanyPositions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Log> Logs
        {
            get
            {
                if ((_Logs == null))
                {
                    _Logs = base.CreateObjectSet<Log>("Logs");
                }
                return _Logs;
            }
        }
        private ObjectSet<Log> _Logs;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyPositions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyPositions(CompanyPosition companyPosition)
        {
            base.AddObject("CompanyPositions", companyPosition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Logs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogs(Log log)
        {
            base.AddObject("Logs", log);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmployeeModel", Name="CompanyPosition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyPosition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyPosition object.
        /// </summary>
        /// <param name="gradeID">Initial value of the GradeID property.</param>
        /// <param name="jobDescription">Initial value of the JobDescription property.</param>
        /// <param name="department">Initial value of the Department property.</param>
        /// <param name="salary">Initial value of the Salary property.</param>
        public static CompanyPosition CreateCompanyPosition(global::System.Int32 gradeID, global::System.String jobDescription, global::System.String department, global::System.Decimal salary)
        {
            CompanyPosition companyPosition = new CompanyPosition();
            companyPosition.GradeID = gradeID;
            companyPosition.JobDescription = jobDescription;
            companyPosition.Department = department;
            companyPosition.Salary = salary;
            return companyPosition;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GradeID
        {
            get
            {
                return _GradeID;
            }
            set
            {
                if (_GradeID != value)
                {
                    OnGradeIDChanging(value);
                    ReportPropertyChanging("GradeID");
                    _GradeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GradeID");
                    OnGradeIDChanged();
                }
            }
        }
        private global::System.Int32 _GradeID;
        partial void OnGradeIDChanging(global::System.Int32 value);
        partial void OnGradeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JobDescription
        {
            get
            {
                return _JobDescription;
            }
            set
            {
                OnJobDescriptionChanging(value);
                ReportPropertyChanging("JobDescription");
                _JobDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("JobDescription");
                OnJobDescriptionChanged();
            }
        }
        private global::System.String _JobDescription;
        partial void OnJobDescriptionChanging(global::System.String value);
        partial void OnJobDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department
        {
            get
            {
                return _Department;
            }
            set
            {
                OnDepartmentChanging(value);
                ReportPropertyChanging("Department");
                _Department = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Department");
                OnDepartmentChanged();
            }
        }
        private global::System.String _Department;
        partial void OnDepartmentChanging(global::System.String value);
        partial void OnDepartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Salary
        {
            get
            {
                return _Salary;
            }
            set
            {
                OnSalaryChanging(value);
                ReportPropertyChanging("Salary");
                _Salary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Salary");
                OnSalaryChanged();
            }
        }
        private global::System.Decimal _Salary;
        partial void OnSalaryChanging(global::System.Decimal value);
        partial void OnSalaryChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmployeeModel", "FK_Employee_CompanyPosition", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("EmployeeModel.FK_Employee_CompanyPosition", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("EmployeeModel.FK_Employee_CompanyPosition", "Employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmployeeModel", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="surname">Initial value of the Surname property.</param>
        /// <param name="town">Initial value of the Town property.</param>
        /// <param name="county">Initial value of the County property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        /// <param name="gradeID">Initial value of the GradeID property.</param>
        public static Employee CreateEmployee(global::System.Int32 employeeId, global::System.String name, global::System.String surname, global::System.String town, global::System.String county, global::System.String country, global::System.Int32 gradeID)
        {
            Employee employee = new Employee();
            employee.EmployeeId = employeeId;
            employee.Name = name;
            employee.Surname = surname;
            employee.Town = town;
            employee.County = county;
            employee.Country = country;
            employee.GradeID = gradeID;
            return employee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                if (_EmployeeId != value)
                {
                    OnEmployeeIdChanging(value);
                    ReportPropertyChanging("EmployeeId");
                    _EmployeeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeId");
                    OnEmployeeIdChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Int32 value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Town
        {
            get
            {
                return _Town;
            }
            set
            {
                OnTownChanging(value);
                ReportPropertyChanging("Town");
                _Town = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Town");
                OnTownChanged();
            }
        }
        private global::System.String _Town;
        partial void OnTownChanging(global::System.String value);
        partial void OnTownChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String County
        {
            get
            {
                return _County;
            }
            set
            {
                OnCountyChanging(value);
                ReportPropertyChanging("County");
                _County = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("County");
                OnCountyChanged();
            }
        }
        private global::System.String _County;
        partial void OnCountyChanging(global::System.String value);
        partial void OnCountyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GradeID
        {
            get
            {
                return _GradeID;
            }
            set
            {
                OnGradeIDChanging(value);
                ReportPropertyChanging("GradeID");
                _GradeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GradeID");
                OnGradeIDChanged();
            }
        }
        private global::System.Int32 _GradeID;
        partial void OnGradeIDChanging(global::System.Int32 value);
        partial void OnGradeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmployeeModel", "FK_Employee_CompanyPosition", "CompanyPosition")]
        public CompanyPosition CompanyPosition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyPosition>("EmployeeModel.FK_Employee_CompanyPosition", "CompanyPosition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyPosition>("EmployeeModel.FK_Employee_CompanyPosition", "CompanyPosition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompanyPosition> CompanyPositionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyPosition>("EmployeeModel.FK_Employee_CompanyPosition", "CompanyPosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompanyPosition>("EmployeeModel.FK_Employee_CompanyPosition", "CompanyPosition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmployeeModel", "FK_Log_Employee", "Log")]
        public EntityCollection<Log> Logs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Log>("EmployeeModel.FK_Log_Employee", "Log");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Log>("EmployeeModel.FK_Log_Employee", "Log", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmployeeModel", Name="Log")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Log : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Log object.
        /// </summary>
        /// <param name="logId">Initial value of the LogId property.</param>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        /// <param name="enterDateTime">Initial value of the EnterDateTime property.</param>
        /// <param name="leaveDateTime">Initial value of the LeaveDateTime property.</param>
        public static Log CreateLog(global::System.Int32 logId, global::System.Int32 employeeId, global::System.DateTime enterDateTime, global::System.DateTime leaveDateTime)
        {
            Log log = new Log();
            log.LogId = logId;
            log.EmployeeId = employeeId;
            log.EnterDateTime = enterDateTime;
            log.LeaveDateTime = leaveDateTime;
            return log;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogId
        {
            get
            {
                return _LogId;
            }
            set
            {
                if (_LogId != value)
                {
                    OnLogIdChanging(value);
                    ReportPropertyChanging("LogId");
                    _LogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LogId");
                    OnLogIdChanged();
                }
            }
        }
        private global::System.Int32 _LogId;
        partial void OnLogIdChanging(global::System.Int32 value);
        partial void OnLogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private global::System.Int32 _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Int32 value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EnterDateTime
        {
            get
            {
                return _EnterDateTime;
            }
            set
            {
                OnEnterDateTimeChanging(value);
                ReportPropertyChanging("EnterDateTime");
                _EnterDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnterDateTime");
                OnEnterDateTimeChanged();
            }
        }
        private global::System.DateTime _EnterDateTime;
        partial void OnEnterDateTimeChanging(global::System.DateTime value);
        partial void OnEnterDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LeaveDateTime
        {
            get
            {
                return _LeaveDateTime;
            }
            set
            {
                OnLeaveDateTimeChanging(value);
                ReportPropertyChanging("LeaveDateTime");
                _LeaveDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeaveDateTime");
                OnLeaveDateTimeChanged();
            }
        }
        private global::System.DateTime _LeaveDateTime;
        partial void OnLeaveDateTimeChanging(global::System.DateTime value);
        partial void OnLeaveDateTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmployeeModel", "FK_Log_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("EmployeeModel.FK_Log_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("EmployeeModel.FK_Log_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("EmployeeModel.FK_Log_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("EmployeeModel.FK_Log_Employee", "Employee", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
